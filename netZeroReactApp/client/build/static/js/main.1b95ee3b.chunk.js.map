{"version":3,"sources":["components/SearchComponent.js","components/MapComponent.js","mapStyles.js","components/WeatherComponent.js","containers/HomeContainer.js","components/plots/AQIPlot.js","components/plots/NO2Plot.js","components/plots/O3Plot.js","components/plots/PM10Plot.js","components/plots/PM2_5Plot.js","components/UserComponent.js","containers/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["SearchComponent","panTo","usePlacesAutocomplete","requestOptions","location","lat","lng","radius","ready","value","suggestions","status","data","setValue","clearSuggestions","handleSelect","address","a","getGeocode","results","getLatLng","console","log","className","onSelect","onChange","e","target","disabled","placeholder","map","id","description","key","libraries","mapContainerStyle","height","width","options","styles","disableDefaultUI","zoomControl","center","MapComponent","parentCallback","useLoadScript","googleMapsApiKey","isLoaded","loadError","React","useState","markers","setMarkers","selected","setSelected","onMapClick","useCallback","current","latLng","time","Date","mapRef","useRef","onMapLoad","setZoom","setLocation","latitude","longitude","api","pollution","setPollution","getPollution","fetch","length","then","res","json","result","zoom","onClick","onLoad","marker","position","onCloseClick","Geocode","setApiKey","fromLatLng","response","formatted_address","error","formatRelative","Button","variant","size","list","components","co","nh3","no","no2","o3","pm2_5","pm10","so2","memo","require","DateTime","WeatherComponent","parentCallbackLogin","setQuery","weather","setWeather","startDate","setStartDate","endDate","setEndDate","login","startDateTimestamp","endDateTimestamp","displayLocation","city","address_components","long_name","query","getWeather","getDateRangePollution","window","alert","resultRange","Container","fluid","Row","main","temp","Col","name","sys","country","Math","round","calendarType","LineChart","margin","top","right","bottom","left","Line","type","dataKey","stroke","CartesianGrid","XAxis","domain","Label","offset","fill","Tooltip","HomeContainer","pollutionData","setLogin","to","xs","marks","AQIPlot","locationData","YAxis","angle","NO2Plot","O3Plot","PM10Plot","PM2_5Plot","UserComponent","history","useHistory","web3","setWeb3","accounts","setAccounts","contract","setContract","loading","setLoading","connected","setConnected","setLat","lon","setLon","undefined","pollutionDataArray","setPollutionDataArray","dataArray","setDataArray","setLocationData","showlocationData","setShowLocationData","connectToWallet","getWeb3Obj","web3Instance","eth","getAccounts","accountsInstance","net","getId","networkId","deployedNetwork","PollutionDataContract","networks","instance","Contract","abi","setEventListener","listenMMAccount","ethereum","Web3","enable","provider","providers","HttpProvider","web3Obj","on","contractInstance","_accounts","_address","events","RequestMultipleFulfilled","filter","requester_","event","returnValues","aqi_","lattitudeFunction","longitudeFunction","RequestFunction","preventDefault","methods","requestMultipleParametersFromUser","send","from","RequestAndTrackFunction","addLocationDataAndFetchPollutionData","gettingPastDayEvents","getBlockNumber","latestBlock","returnCoordinateValuesFromPastEvents","getPastEvents","fromBlock","toBlock","forEach","push","lat_","lon_","timestamp","timestamp_","returnPollutionValuesFromPastEvents","aqi","no2_","o3_","pm10_","pm2_5_","i","gettingDataOfALocation","locationArray","ele","htmlFor","onSubmit","scope","arr","uuid","toString","MainContainer","exact","path","component","UserCompontent","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.1b95ee3b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\n\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\n\nexport default function SearchComponent({ panTo }) {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 51.507351, lng: () => -0.127758 },\n      //CAN check later\n      radius: 200 * 1000,\n    },\n  });\n\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n      panTo({ lat, lng });\n      //set a marker after search\n      // setMarkers({lat, lng });\n    } catch (error) {\n      console.log(\"😱 Error: \", error);\n    }\n  };\n\n  return (\n    <div className=\"search\">\n      <Combobox onSelect={handleSelect}>\n        {/* <Combobox onSelect = {(address)=> {console.log(address);}} */}\n        <ComboboxInput\n          value={value}\n          onChange={handleInput}\n          disabled={!ready}\n          placeholder=\"Search your location\"\n        />\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === \"OK\" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption key={id} value={description} />\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Geocode from \"react-geocode\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nimport SearchComponent from \"./SearchComponent\";\nimport { formatRelative } from \"date-fns\";\nimport { Button } from \"react-bootstrap\";\n\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from \"../mapStyles\";\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"45em\",\n  width: \"45em\",\n};\n//custom options of google map\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\n// find location on https://www.latlong.net/\n\nconst center = {\n  lat: 51.507351,\n  lng: -0.127758,\n};\n\nexport default function MapComponent({ parentCallback }) {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyCouekgXHz8Yzs4OS2wsGNWBT6lzF3YXu0\",\n    libraries,\n  });\n\n  const [markers, setMarkers] = React.useState([]);\n\n  const sendData = () => {\n    parentCallback(markers);\n  };\n\n  // console.log(markers);\n\n  const [selected, setSelected] = React.useState(null);\n\n  const onMapClick = React.useCallback((e) => {\n    setMarkers((current) => [\n      ...current,\n      {\n        lat: e.latLng.lat(),\n        lng: e.latLng.lng(),\n        time: new Date(),\n      },\n    ]);\n  }, []);\n\n  const mapRef = React.useRef();\n\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const panTo = React.useCallback(({ lat, lng }) => {\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(10);\n  }, []);\n\n  const [location, setLocation] = React.useState(null);\n\n  function displayLocation(latitude, longitude) {\n    // e.preventDefault();\n    Geocode.setApiKey(\"AIzaSyCouekgXHz8Yzs4OS2wsGNWBT6lzF3YXu0\");\n    Geocode.fromLatLng(latitude, longitude).then(\n      (response) => {\n        let address = response.results[0].formatted_address;\n        setLocation(address);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  const api = {\n    key: \"c689226726c66056c7e27a6cf24a57ff\",\n    base: \"http://api.openweathermap.org/data/2.5/\",\n  };\n\n  const [pollution, setPollution] = useState({});\n\n  const getPollution = async () => {\n    fetch(\n      `${api.base}air_pollution?lat=${markers[markers.length - 1].lat}&lon=${\n        markers[markers.length - 1].lng\n      }&APPID=${api.key}`\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        setPollution(result);\n      });\n  };\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  return (\n    <div>\n      <SearchComponent panTo={panTo} />\n\n      <GoogleMap\n        id=\"map\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={6} // how close up you want the map to be\n        center={center}\n        options={options}\n        onClick={onMapClick}\n        onLoad={onMapLoad}\n      >\n        {markers.map((marker) => (\n          <Marker\n            key={`${marker.lat}-${marker.lng}`}\n            position={{ lat: marker.lat, lng: marker.lng }}\n            onClick={() => {\n              setSelected(marker);\n              sendData();\n            }}\n          />\n        ))}\n\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.lat, lng: selected.lng }}\n            onCloseClick={() => {\n              setSelected(null);\n            }}\n          >\n            <div>\n              <h4 onChange={displayLocation(selected.lat, selected.lng)}>\n                {location}\n              </h4>\n              <div className=\"latitude\">Latitude:{selected.lat} </div>\n              <div className=\"longitude\">Longitude:{selected.lng} </div>\n              <p>As in {formatRelative(selected.time, new Date())}</p>\n              <Button variant=\"outline-primary\" size=\"sm\" onClick={getPollution}>Get pollution</Button>\n              {typeof pollution.list != \"undefined\" &&\n              pollution.list.length === 1 ? (\n                <div>\n                  <div className=\"pollution-box\">\n                    <div className=\"pollutionCO\">\n                      CO: {pollution.list[0].components.co}\n                    </div>\n                    <div className=\"pollutionNH3\">\n                      NH3: {pollution.list[0].components.nh3}\n                    </div>\n                    <div className=\"pollutionNO\">\n                      NO: {pollution.list[0].components.no}\n                    </div>\n                    <div className=\"pollutionNO2\">\n                      NO2: {pollution.list[0].components.no2}\n                    </div>\n                    <div className=\"pollutionO3\">\n                      O3: {pollution.list[0].components.o3}\n                    </div>\n                    <div className=\"pollutionPM2_5\">\n                      PM2_5: {pollution.list[0].components.pm2_5}\n                    </div>\n                    <div className=\"pollutionPM10\">\n                      PM10: {pollution.list[0].components.pm10}\n                    </div>\n                    <div className=\"pollutionSO2\">\n                      SO2: {pollution.list[0].components.so2}\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </div>\n  );\n}\n\nexport const MemoizedLocation = React.memo(MapComponent);\n","export default [\n  {\n      \"featureType\": \"all\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n          {\n              \"saturation\": 36\n          },\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 40\n          }\n      ]\n  },\n  {\n      \"featureType\": \"all\",\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [\n          {\n              \"visibility\": \"on\"\n          },\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 16\n          }\n      ]\n  },\n  {\n      \"featureType\": \"all\",\n      \"elementType\": \"labels.icon\",\n      \"stylers\": [\n          {\n              \"visibility\": \"off\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 20\n          }\n      ]\n  },\n  {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 17\n          },\n          {\n              \"weight\": 1.2\n          }\n      ]\n  },\n  {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 20\n          }\n      ]\n  },\n  {\n      \"featureType\": \"poi\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 21\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 17\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 29\n          },\n          {\n              \"weight\": 0.2\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 18\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 16\n          }\n      ]\n  },\n  {\n      \"featureType\": \"transit\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 19\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          },\n          {\n              \"lightness\": 17\n          }\n      ]\n  }\n]","import React, { useState } from \"react\";\nimport DatePicker from \"react-date-picker\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Label,\n  CartesianGrid,\n} from \"recharts\";\nimport Geocode from \"react-geocode\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport moment from \"moment\";\nconst { DateTime } = require(\"luxon\");\n\n// import * as d3 from 'd3';\n\nfunction WeatherComponent({ markers, parentCallbackLogin }) {\n  var date = Date();\n\n  const api = {\n    key: \"54b108763f27c2e29ad2eec3d2d9dcc3\",\n    base: \"http://api.openweathermap.org/data/2.5/\",\n  };\n  const [location, setLocation] = React.useState(\"Please pin a location\");\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [pollution, setPollution] = useState({});\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [login, setLogin] = useState(false);\n  const startDateTimestamp = (startDate / 1000) | 0;\n  const endDateTimestamp = (endDate / 1000) | 0;\n\n  function displayLocation(latitude, longitude) {\n    Geocode.setApiKey(\"AIzaSyCouekgXHz8Yzs4OS2wsGNWBT6lzF3YXu0\");\n    Geocode.fromLatLng(latitude, longitude).then((response) => {\n      const city = response.results[0].address_components[1].long_name;\n      console.log(city);\n      getWeather(city);\n      setLocation(city);\n    });\n    console.log(\"query\");\n    console.log(setQuery);\n  }\n\n  function getWeather(query) {\n    console.log(query);\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setWeather(result);\n        console.log(weather);\n        // setQuery(\"\");\n      });\n  }\n\n  const sendLoginData = () => {\n    parentCallbackLogin(login);\n  };\n\n  const getDateRangePollution = async () => {\n    if (startDateTimestamp >= endDateTimestamp) {\n      window.alert(\"Please select a valid time\");\n    } else {\n      try {\n        fetch(\n          `${api.base}air_pollution/history?lat=${\n            markers[markers.length - 1].lat\n          }&lon=${\n            markers[markers.length - 1].lng\n          }&start=${startDateTimestamp}&end=${endDateTimestamp}&APPID=${\n            api.key\n          }`\n        )\n          .then((res) => res.json())\n          .then((resultRange) => {\n            setPollution(resultRange);\n          });\n        displayLocation(\n          markers[markers.length - 1].lat,\n          markers[markers.length - 1].lng\n        );\n      } catch {\n        window.alert(\"Please pin a location\");\n      }\n    }\n  };\n\n  // const formatXAxis = (date).forEach (date => {\n  //   return moment(date).format('DD/MM/YY HH:mm')})\n\n  return (\n    <Container fluid>\n      <Button variant=\"secondary\" onClick={sendLoginData} id=\"login\">\n        Login\n      </Button>\n\n      <Row>\n        <div\n          className={\n            typeof weather.main != \"undefined\"\n              ? weather.main.temp > 16\n                ? \"app warm\"\n                : \"app\"\n              : \"app\"\n          }\n        >\n          <main className=\"weather-box\">\n            <div className=\"city-info\">\n              <Row>\n                <Col>\n                  <h3 onChange={displayLocation}> {location} </h3>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  {typeof weather.main != \"undefined\" ? (\n                    <div>\n                      <div className=\"location-box\">\n                        {weather.name}, {weather.sys.country}\n                      </div>\n                      <div className=\"weather-box\">\n                        <div className=\"temp\">\n                          {Math.round(weather.main.temp)}°c\n                        </div>\n                        <div className=\"weather\">{weather.weather[0].main}</div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </Col>\n              </Row>\n\n              <Row>\n                <Col>\n                  <div className=\"date-time-picker-start\">\n                    Start Date\n                    <DatePicker\n                      onChange={setStartDate}\n                      value={startDate}\n                      name={\"Start Date\"}\n                      calendarType={\"ISO 8601\"}\n                    />\n                  </div>\n                </Col>\n\n                <Col>\n                  <div className=\"date-time-picker-end\">\n                    End Date\n                    <DatePicker\n                      onChange={setEndDate}\n                      value={endDate}\n                      name={\"End Date\"}\n                    />\n                  </div>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col>\n                  <div className=\"pollution-data\">\n                    <Button variant=\"light\" onClick={getDateRangePollution}>\n                      Get pollution in date range\n                    </Button>\n                  </div>\n                </Col>\n              </Row>\n              <br></br>\n            </div>\n\n            <div className=\"charts\">\n              <Row>\n                <LineChart\n                  id=\"chart1\"\n                  width={600}\n                  height={300}\n                  data={pollution.list}\n                  margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n                >\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"components.nh3\"\n                    stroke=\"#b284d8\"\n                  />\n\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"components.no\"\n                    stroke=\"#84d888\"\n                  />\n\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"components.no2\"\n                    stroke=\"#d4d884\"\n                  />\n\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"components.so2\"\n                    stroke=\"#d88884\"\n                  />\n\n                  <CartesianGrid stroke=\"#ccc\" />\n\n                  <XAxis\n                    dataKey=\"dt\"\n                    domain={[\"dataMin\", \"dataMax\"]}\n                    type=\"number\"\n                  >\n                    <Label\n                      value=\"Pollution\"\n                      offset={-3}\n                      position=\"insideBottom\"\n                      fill=\"#c4c1c1\"\n                    />\n                  </XAxis>\n\n                  <Tooltip />\n                </LineChart>\n              </Row>\n\n              <Row>\n                <LineChart\n                  id=\"chart2\"\n                  width={300}\n                  height={300}\n                  data={pollution.list}\n                  margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n                >\n                  <Line type=\"monotone\" dataKey=\"main.aqi\" stroke=\"#8884d8\" />\n                  <CartesianGrid stroke=\"#ccc\" />\n                  <XAxis\n                    dataKey=\"dt\"\n                    domain={[\"dataMin\", \"dataMax\"]}\n                    type=\"number\"\n                  >\n                    <Label\n                      value=\"Air Quality\"\n                      offset={-3}\n                      position=\"insideBottom\"\n                      fill=\"#c4c1c1\"\n                    />\n                  </XAxis>\n                  <Tooltip />\n                </LineChart>\n\n                <LineChart\n                  id=\"chart3\"\n                  width={300}\n                  height={300}\n                  data={pollution.list}\n                  margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n                >\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"components.co\"\n                    stroke=\"#8884d8\"\n                  />\n                  <CartesianGrid stroke=\"#ccc\" />\n                  <XAxis\n                    dataKey=\"dt\"\n                    domain={[\"dataMin\", \"dataMax\"]}\n                    type=\"number\"\n                  >\n                    <Label\n                      value=\"CO\"\n                      offset={-3}\n                      position=\"insideBottom\"\n                      fill=\"#c4c1c1\"\n                    />\n                  </XAxis>\n                  <Tooltip />\n                </LineChart>\n              </Row>\n            </div>\n          </main>\n        </div>\n      </Row>\n    </Container>\n  );\n}\nexport default WeatherComponent;\n","import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport MapComponent from \"../components/MapComponent\";\nimport WeatherComponent from \"../components/WeatherComponent\";\n// import { Navigate } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n} from \"react-router-dom\";\n\nexport default function HomeContainer() {\n  const [markers, setMarkers] = useState([]);\n  const [pollutionData, setPollutionData] = useState({});\n  const [login, setLogin] = useState(true);\n\n  const callbackMarkers = (marks) => {\n    setMarkers(marks);\n  };\n\n  const callBackLogin = (login) => {\n    setLogin(login);\n  };\n\n  if (login == false) {\n    return <Redirect to=\"/user\" />;\n  }\n\n  return (\n    <div>\n      <Container fluid>\n        <Row>\n         <h1>netZero</h1>\n          <Col xs={7}>\n            <MapComponent\n              parentCallback={callbackMarkers}\n              pollution={pollutionData}\n            />\n          </Col>\n          <Col xs={5}>\n            <WeatherComponent\n              markers={markers}\n              parentCallbackLogin={callBackLogin}\n            ></WeatherComponent>\n          </Col>\n        </Row>\n        <Row></Row>\n      </Container>\n\n      {/* <Router>\n        <Fragment>\n          <Routes>\n            <Route path=\"/login\" exact component={UserCompontent} />\n            <Route to=\"/\" component={HomeContainer}></Route>\n          </Routes>\n        </Fragment>\n      </Router> */}\n    </div>\n  );\n}\n","import React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Label } from 'recharts';\n\nfunction AQIPlot({ locationData }) {\n    console.log(locationData);\n\n    return (\n        <LineChart width={300} height={400} data={locationData}>\n            <Line type=\"monotone\" dataKey=\"aqi\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis dataKey=\"timestamp\">\n                <Label value=\"Timestamp\" offset={0} position=\"insideBottom\" fill=\"#c4c1c1\" />\n            </XAxis>\n            <YAxis >\n                <Label value=\"AQI\" offset={10} angle={-90} position=\"insideLeft\" fill=\"#c4c1c1\" />\n            </YAxis>\n            <Tooltip />\n        </LineChart>\n    );\n}\n\nexport default AQIPlot;","import React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Label } from 'recharts';\n\nfunction NO2Plot({ locationData }) {\n    console.log(locationData);\n\n    return (\n        <LineChart width={300} height={400} data={locationData}>\n            <Line type=\"monotone\" dataKey=\"no2\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis dataKey=\"timestamp\">\n                <Label value=\"Timestamp\" offset={0} position=\"insideBottom\" fill=\"#c4c1c1\"/>\n            </XAxis>\n            <YAxis >\n                <Label value=\"NO2\" offset={10} angle={-90} position=\"insideLeft\" fill=\"#c4c1c1\"/>\n            </YAxis>\n            <Tooltip />\n        </LineChart>\n    );\n}\n\nexport default NO2Plot;","import React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Label } from 'recharts';\n\nfunction O3Plot({ locationData }) {\n    console.log(locationData);\n\n    return (\n        <LineChart width={300} height={400} data={locationData}>\n            <Line type=\"monotone\" dataKey=\"o3\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis dataKey=\"timestamp\">\n                <Label value=\"Timestamp\" offset={0} position=\"insideBottom\" fill=\"#c4c1c1\"/>\n            </XAxis>\n            <YAxis >\n                <Label value=\"O3\" offset={10} angle={-90} position=\"insideLeft\" fill=\"#c4c1c1\"/>\n            </YAxis>\n            <Tooltip />\n        </LineChart>\n    );\n}\n\nexport default O3Plot;","import React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Label } from 'recharts';\n\nfunction PM10Plot({ locationData }) {\n    console.log(locationData);\n\n    return (\n        <LineChart width={300} height={400} data={locationData}>\n            <Line type=\"monotone\" dataKey=\"pm10\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis dataKey=\"timestamp\">\n                <Label value=\"Timestamp\" offset={0} position=\"insideBottom\" fill=\"#c4c1c1\"/>\n            </XAxis>\n            <YAxis >\n                <Label value=\"PM10\" offset={10} angle={-90} position=\"insideLeft\" fill=\"#c4c1c1\"/>\n            </YAxis>\n            <Tooltip />\n        </LineChart>\n    );\n}\n\nexport default PM10Plot;","import React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Label } from 'recharts';\n\nfunction PM2_5Plot({ locationData }) {\n    console.log(locationData);\n\n    return (\n        <LineChart width={300} height={400} data={locationData}>\n            <Line type=\"monotone\" dataKey=\"pm2_5\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis dataKey=\"timestamp\">\n                <Label value=\"Timestamp\" offset={0} position=\"insideBottom\" fill=\"#c4c1c1\" />\n            </XAxis>\n            <YAxis >\n                <Label value=\"PM2.5\" offset={10} angle={-90} position=\"insideLeft\" fill=\"#c4c1c1\"/>\n            </YAxis>\n            <Tooltip />\n        </LineChart>\n    );\n}\n\nexport default PM2_5Plot;","import React, { useState } from \"react\";\nimport Web3 from \"web3\";\nimport uuid from \"react-uuid\";\nimport PollutionDataContract from \"./../contracts/PollutionDataContract.json\";\n\nimport AQIPlot from \"./plots/AQIPlot\";\nimport NO2Plot from \"./plots/NO2Plot\";\nimport O3Plot from \"./plots/O3Plot\";\nimport PM10Plot from \"./plots/PM10Plot\";\nimport PM2_5Plot from \"./plots/PM2_5Plot\";\nimport { Container, Row, Col, Button, table } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./CSS/UserComponent.css\";\n\nfunction UserComponent() {\n  const history = useHistory();\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [contract, setContract] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [connected, setConnected] = useState(false);\n\n  const [lat, setLat] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n\n  const [pollutionDataArray, setPollutionDataArray] = useState(undefined);\n  const [dataArray, setDataArray] = useState(undefined);\n\n  const [locationData, setLocationData] = useState(undefined);\n  const [showlocationData, setShowLocationData] = useState(false);\n\n  const connectToWallet = async () => {\n    try {\n      console.log(\"connected!\");\n\n      const web3Instance = await getWeb3Obj();\n      console.log(web3Instance);\n\n      const accountsInstance = await web3Instance.eth.getAccounts();\n\n      const networkId = await web3Instance.eth.net.getId();\n      const deployedNetwork = PollutionDataContract.networks[networkId];\n\n      console.log(\"contract address on the network\", deployedNetwork.address);\n\n      const instance = new web3Instance.eth.Contract(\n        PollutionDataContract.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n\n      setWeb3(web3Instance);\n      setAccounts(accountsInstance);\n      setContract(instance);\n      setConnected(true);\n\n      setEventListener(instance, accountsInstance);\n\n      await listenMMAccount(web3Instance);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getWeb3Obj = async () => {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n      const web3 = new Web3(window.ethereum);\n      try {\n        // Request account access if needed\n        await window.ethereum.enable();\n        // Accounts now exposed\n        return web3;\n      } catch (error) {\n        return error;\n      }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n      // Use Mist/MetaMask's provider.\n      const web3 = window.web3;\n      console.log(\"Injected web3 detected.\");\n      return web3;\n    }\n    // Fallback to localhost; use dev console port by default...\n    else {\n      const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n      const web3 = new Web3(provider);\n      console.log(\"No web3 instance injected, using Local web3.\");\n      return web3;\n    }\n  };\n\n  const listenMMAccount = async (web3Obj) => {\n    window.ethereum.on(\"accountsChanged\", async () => {\n      const accountsInstance = await web3Obj.eth.getAccounts();\n      console.log(accountsInstance);\n      setAccounts(accountsInstance);\n\n      if (accountsInstance.length === 0) {\n        setConnected(false);\n      }\n\n      setPollutionDataArray(undefined);\n    });\n  };\n\n  const setEventListener = (contractInstance, _accounts) => {\n    console.log(contractInstance._address, \"from event listener\");\n    contractInstance.events\n      .RequestMultipleFulfilled({ filter: { requester_: _accounts[0] } })\n      .on(\"data\", function (event) {\n        let data = event.returnValues;\n\n        console.log(data);\n        alert(`the aqi value of the requested location is ${data.aqi_}`);\n      });\n  };\n\n  const lattitudeFunction = async (event) => {\n    console.log(event.target.value);\n    setLat(event.target.value);\n  };\n\n  const longitudeFunction = async (event) => {\n    console.log(event.target.value);\n    setLon(event.target.value);\n  };\n\n  const RequestFunction = async (event) => {\n    event.preventDefault();\n    try {\n      setLoading(true);\n      await contract.methods\n        .requestMultipleParametersFromUser(lat, lon, accounts[0])\n        .send({ from: accounts[0] });\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n    setLon(\"\");\n    setLat(\"\");\n  };\n\n  const RequestAndTrackFunction = async (event) => {\n    event.preventDefault();\n    try {\n      setLoading(true);\n      await contract.methods\n        .addLocationDataAndFetchPollutionData(lat, lon)\n        .send({ from: accounts[0] });\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n    setLon(\"\");\n    setLat(\"\");\n  };\n\n  const gettingPastEvents = () => {\n    const returnCoordinateValuesFromPastEvents = [];\n    contract\n      .getPastEvents(\"coordinatesAndAddress\", {\n        fromBlock: 1,\n        filter: { requester_: accounts[0] },\n      })\n      .then(function (events) {\n        events.forEach((event) => {\n          returnCoordinateValuesFromPastEvents.push({\n            lat: event.returnValues.lat_,\n            lon: event.returnValues.lon_,\n            timestamp: new Date(event.returnValues.timestamp_ * 1000),\n          });\n        });\n        console.log(returnCoordinateValuesFromPastEvents);\n\n        let returnPollutionValuesFromPastEvents = [];\n        contract\n          .getPastEvents(\"RequestMultipleFulfilled\", {\n            fromBlock: 1,\n            filter: { requester_: accounts[0] },\n          })\n          .then(function (events) {\n            events.forEach((event) => {\n              returnPollutionValuesFromPastEvents.push({\n                aqi: event.returnValues.aqi_,\n                no2: event.returnValues.no2_ / 10 ** 8,\n                o3: event.returnValues.o3_ / 10 ** 8,\n                pm10: event.returnValues.pm10_ / 10 ** 8,\n                pm2_5: event.returnValues.pm2_5_ / 10 ** 8,\n              });\n            });\n            console.log(returnPollutionValuesFromPastEvents);\n\n            for (\n              let i = 0;\n              i < returnCoordinateValuesFromPastEvents.length;\n              i++\n            ) {\n              returnCoordinateValuesFromPastEvents[i].aqi =\n                returnPollutionValuesFromPastEvents[i].aqi;\n              returnCoordinateValuesFromPastEvents[i].no2 =\n                returnPollutionValuesFromPastEvents[i].no2;\n              returnCoordinateValuesFromPastEvents[i].o3 =\n                returnPollutionValuesFromPastEvents[i].o3;\n              returnCoordinateValuesFromPastEvents[i].pm10 =\n                returnPollutionValuesFromPastEvents[i].pm10;\n              returnCoordinateValuesFromPastEvents[i].pm2_5 =\n                returnPollutionValuesFromPastEvents[i].pm2_5;\n            }\n\n            setPollutionDataArray(returnCoordinateValuesFromPastEvents);\n            setDataArray(returnCoordinateValuesFromPastEvents);\n          });\n      });\n\n    setShowLocationData(false);\n  };\n\n  const gettingPastDayEvents = async () => {\n    const latestBlock = await web3.eth.getBlockNumber();\n    console.log(latestBlock);\n    setPollutionDataArray(undefined);\n\n    const returnCoordinateValuesFromPastEvents = [];\n    contract\n      .getPastEvents(\"coordinatesAndAddress\", {\n        fromBlock: latestBlock - 6000,\n        toBlock: latestBlock,\n        filter: { requester_: accounts[0] },\n      })\n      .then(function (events) {\n        events.forEach((event) => {\n          returnCoordinateValuesFromPastEvents.push({\n            lat: event.returnValues.lat_,\n            lon: event.returnValues.lon_,\n            timestamp: new Date(event.returnValues.timestamp_ * 1000),\n          });\n        });\n        console.log(returnCoordinateValuesFromPastEvents);\n\n        let returnPollutionValuesFromPastEvents = [];\n        contract\n          .getPastEvents(\"RequestMultipleFulfilled\", {\n            fromBlock: latestBlock - 6000,\n            toBlock: latestBlock,\n            filter: { requester_: accounts[0] },\n          })\n          .then(function (events) {\n            events.forEach((event) => {\n              returnPollutionValuesFromPastEvents.push({\n                aqi: event.returnValues.aqi_,\n                no2: event.returnValues.no2_ / 10 ** 8,\n                o3: event.returnValues.o3_ / 10 ** 8,\n                pm10: event.returnValues.pm10_ / 10 ** 8,\n                pm2_5: event.returnValues.pm2_5_ / 10 ** 8,\n              });\n            });\n            console.log(returnPollutionValuesFromPastEvents);\n\n            for (\n              let i = 0;\n              i < returnCoordinateValuesFromPastEvents.length;\n              i++\n            ) {\n              returnCoordinateValuesFromPastEvents[i].aqi =\n                returnPollutionValuesFromPastEvents[i].aqi;\n              returnCoordinateValuesFromPastEvents[i].no2 =\n                returnPollutionValuesFromPastEvents[i].no2;\n              returnCoordinateValuesFromPastEvents[i].o3 =\n                returnPollutionValuesFromPastEvents[i].o3;\n              returnCoordinateValuesFromPastEvents[i].pm10 =\n                returnPollutionValuesFromPastEvents[i].pm10;\n              returnCoordinateValuesFromPastEvents[i].pm2_5 =\n                returnPollutionValuesFromPastEvents[i].pm2_5;\n            }\n\n            setPollutionDataArray(returnCoordinateValuesFromPastEvents);\n          });\n      });\n    setShowLocationData(false);\n  };\n\n  const gettingDataOfALocation = async () => {\n    const locationArray = dataArray.filter(\n      (ele) => ele.lat === lat && ele.lon === lon\n    );\n    setLocationData(locationArray);\n    setPollutionDataArray(locationArray);\n    setShowLocationData(true);\n  };\n\n  const goBackToHomePage = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <Container fluid>\n      <div className=\"user-component\">\n        <Button variant=\"secondary\" id=\"logout\" onClick={goBackToHomePage}>\n          Logout\n        </Button>\n        {!connected && (\n          <Button id=\"login\" onClick={connectToWallet}>\n            Connect\n          </Button>\n        )}\n        <Row>\n          <Col>\n            {connected && (\n              <div className=\"input-box\">\n                <label htmlFor=\"lattitude\">Lattitude</label>\n                <input\n                  id=\"lattitude\"\n                  value={lat}\n                  onChange={lattitudeFunction}\n                  placeholder=\"Lattitude\"\n                />\n                <br></br>\n                <label htmlFor=\"longitude\">Longitude</label>\n                <input\n                  id=\"longitude\"\n                  value={lon}\n                  onChange={longitudeFunction}\n                  placeholder=\"Longitude\"\n                />\n                <Row>\n                  <div className=\"submit-button\">\n                    <form onSubmit={RequestFunction}>\n                      <Button id=\"request-once\" type=\"submit\">\n                        request once\n                      </Button>\n                    </form>\n                    <form onSubmit={RequestAndTrackFunction}>\n                      <Button id=\"request-track\" type=\"submit\">\n                        request and track\n                      </Button>\n                    </form>\n                  </div>\n                </Row>\n              </div>\n            )}\n            <b>{loading && \"...loading\"}</b>\n            <br />\n          </Col>\n\n          <Col>\n            <div className=\"account-box\">\n              <div>\n                {connected && (\n                  <small>\n                    <b>Account:</b> {accounts[0]}\n                  </small>\n                )}\n              </div>\n              <div>\n                {connected && (\n                  <small>\n                    {\" \"}\n                    <b>Deployed contract:</b> {contract._address}\n                  </small>\n                )}\n              </div>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          {connected && (\n            <div>\n              <div>\n                <Col className=\"pollution-gragh\">\n                  <Button onClick={gettingPastEvents}>\n                    Get All Past Events\n                  </Button>\n                  <Button onClick={gettingPastDayEvents}>\n                    Get Events(last 24 hours)\n                  </Button>\n                  {dataArray && (\n                    <Button onClick={gettingDataOfALocation}>\n                      Pollution gragh of given coordinate\n                    </Button>\n                  )}\n                  <div>\n                    {showlocationData && (\n                      <p>\n                        <hr id=\"line\"></hr>\n                        Green house gases are measured in micro grams per cubic\n                        meter of air\n                      </p>\n                    )}\n                    {showlocationData && (\n                      <div className=\"DataPlots\">\n                        {locationData && (\n                          <AQIPlot locationData={locationData} />\n                        )}\n                        {locationData && (\n                          <NO2Plot locationData={locationData} />\n                        )}\n                        {locationData && <O3Plot locationData={locationData} />}\n                        {locationData && (\n                          <PM10Plot locationData={locationData} />\n                        )}\n                        {locationData && (\n                          <PM2_5Plot locationData={locationData} />\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </Col>\n                <Col className=\"pollution-data\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Entry</th>\n                        <th scope=\"col\">Lattitude</th>\n                        <th scope=\"col\">Longitude</th>\n                        <th scope=\"col\">Datetime</th>\n                        <th scope=\"col\">Aqi</th>\n                        <th scope=\"col\">No2</th>\n                        <th scope=\"col\">O3</th>\n                        <th scope=\"col\">PM10</th>\n                        <th scope=\"col\">PM2.5</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {pollutionDataArray &&\n                        pollutionDataArray.map((arr, i) => {\n                          console.log(pollutionDataArray);\n                          return (\n                            <tr key={uuid()}>\n                              <th scope=\"row\">{i + 1}</th>\n                              <td>lat: {arr.lat}</td>\n                              <td>lon: {arr.lon}</td>\n                              <td>{arr.timestamp.toString()}</td>\n                              <td>{arr.aqi}</td>\n                              <td>{arr.no2}</td>\n                              <td>{arr.o3}</td>\n                              <td>{arr.pm10}</td>\n                              <td>{arr.pm2_5}</td>\n                            </tr>\n                          );\n                        })}\n                    </tbody>\n                  </table>\n                </Col>\n              </div>\n            </div>\n          )}\n        </Row>\n      </div>\n    </Container>\n  );\n}\n\nexport default UserComponent;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomeContainer from \"./HomeContainer\";\nimport UserCompontent from \"../components/UserComponent\";\n\nexport default function MainContainer() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/user\" component={UserCompontent} />\n          <Route exact path=\"/\" component={HomeContainer} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport MainContainer from \"./containers/MainContainer\";\n\nimport \"./App.css\";\n\nfunction App() {\n\n  return (\n    <>\n      <div className=\"App\">\n      <MainContainer/>\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}